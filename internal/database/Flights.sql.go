// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: Flights.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createFlight = `-- name: CreateFlight :one
INSERT INTO Flights(ID, created_at, updated_at, departure, arrival, price)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, created_at, updated_at, departure, arrival, price
`

type CreateFlightParams struct {
	ID        uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	Departure string
	Arrival   string
	Price     float64
}

func (q *Queries) CreateFlight(ctx context.Context, arg CreateFlightParams) (Flight, error) {
	row := q.db.QueryRowContext(ctx, createFlight,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Departure,
		arg.Arrival,
		arg.Price,
	)
	var i Flight
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Departure,
		&i.Arrival,
		&i.Price,
	)
	return i, err
}

const getFlights = `-- name: GetFlights :one
SELECT id, created_at, updated_at, departure, arrival, price FROM Flights
`

func (q *Queries) GetFlights(ctx context.Context) (Flight, error) {
	row := q.db.QueryRowContext(ctx, getFlights)
	var i Flight
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Departure,
		&i.Arrival,
		&i.Price,
	)
	return i, err
}
